#!/usr/bin/python3
import argparse
import subprocess
import os, sys
import argparse

# Create an argument parser
parser = argparse.ArgumentParser(description="UV-Vis Analyzer")

# Add arguments for file names, wavelength range, and deviation
parser.add_argument("files", nargs="+", help="Input file(s), separated by spaces")
parser.add_argument("-wl", "--wavelength", type=str, help="Starting and final wavelength (nm), separated by a comma (,)")
parser.add_argument("-dev", "--deviation", type=float, default=0.4, help="Standard deviation (eV), default is 0.4")

# Parse the command-line arguments
args = parser.parse_args()
wl = args.wavelength
sys.path.append(os.getcwd())
PATH=sys.path[0]
if wl is None:
    print("Error: You must provide a wavelength range using -wl or --wavelength.")
# Save the values in variables
else:
    datas = args.files
    dev = args.deviation
    try:
        lambda1 = wl.split(',')[0]
        lambda2 = wl.split(',')[1]
        a=0
        for m in datas:
            a+=1
            m = os.path.abspath(m)
            with open(m, 'r') as file:
                lines = file.readlines()
                exec("osc_values_"+str(a)+"= []")
                exec("nm_values_"+str(a)+"=[]")
                c = 2.998e8  # Speed of light in m/s
                h = 6.626e-34  # Planck's constant in J*s
                ev_to_joules = 1.602e-28  # Conversion factor from eV to joules
                for num, line in enumerate(lines):
                    if 'Strength   :' in line:
                        osc = float(line.split()[-1])
                        exec("osc_values_"+str(a)+".append(osc)")
                        prev_line = lines[num - 4].strip()
                        E= float(prev_line.split()[-1])
                        nm=h*c/(E*ev_to_joules)
                        exec("nm_values_"+str(a)+".append(nm)")
        citePATH=PATH+'/cite'
        with open(citePATH) as f:
            exec(f.read())
        time.sleep(2)
        PloPATH=PATH+'/Plotter.py'
        with open(PloPATH) as f:
            exec(f.read())
    except FileNotFoundError:
        print('File not found. Please enter a valid filename.')
    except Exception as e:
        print("An error occurred:", e)



